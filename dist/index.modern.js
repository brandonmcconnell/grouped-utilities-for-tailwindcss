function e(e){var t={exports:{}};return e(t,t.exports),t.exports}var t=e(function(e,t){function n(e,t){return{handler:e,config:t}}Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"default",{enumerable:!0,get:function(){return u}}),n.withOptions=function(e,t=(()=>({}))){const n=function(n){return{__options:n,handler:e(n),config:t(n)}};return n.__isOptionsFunction=!0,n.__pluginFunction=e,n.__configFunction=t,n};const u=n}),n=e(function(e,n){function u(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r}});const r=/*#__PURE__*/u(t).default}),u=(0,(n.__esModule?n:{default:n}).default)(({matchUtilities:e})=>{e({multi:e=>{if(!e[0])return{};const t=[e[0],e.slice(-1)[0]],n=["'",'"'].includes(e[0]);if(n&&(e.length<3||t[0]!==t[1]))throw new Error(`Invalid multi value: \`${e}\`. Quoted values must use matching quotes (e.g. \`multi-['...']\` or \`multi-["..."]\`).`);const u=e.slice(...n?[1,-1]:[]).split(/;(?![^[]*\])/).filter(e=>e.trim().length).map(e=>e.replace(/_/g,"\\_").replace(/ /g,"_")).join(" ");return u.trim()?{[`@apply ${u}`]:{}}:{}}})});export{u as default};
//# sourceMappingURL=index.modern.js.map
